# ~/.shell_functions - Custom shell functions

# Exporting functions ensures they are available in subshells
goup() {
  num=$1
  while [ "$num" -ne 0  ];do
    cd ..
    num=$(( num - 1 ))
  done
}
export goup

clone() {
  local repo="$1" user
  repo="${repo#https://github.com/}"
  repo="${repo#git@github.com:}"
  if [[ $repo =~ / ]]; then
    user="${repo%%/*}"
  else
    user="$GITUSER"
    [[ -z "$user" ]] && user="$USER"
  fi
  local name="${repo##*/}"
  local userd="$REPOS/github.com/$user"
  local path="$userd/$name"
  [[ -d "$path" ]] && cd "$path" && return
  mkdir -p "$userd"
  cd "$userd"
  echo gh repo clone "$user/$name" -- --recurse-submodule
  gh repo clone "$user/$name" -- --recurse-submodule
  cd "$name"
}
export clone

duck(){
    w3m "https://lite.duckduckgo.com/lite/?q=" + "$@"
}
export duck

google(){
    w3m "https://www.google.com/search?q=" + "$@"
}
export google

gccd()  {
  git clone "$1" && cd "$(basename "$1".git)" || exit;
}
export gccd

getip() {
  ip -4 address show | grep -oP '(?<=inet\s)\d+(\.\d+){3}'
}
export getip

mkcd() {
   local dir_name=$1
    if [ -z "$dir_name" ]; then
        echo "Enter a directory name."
    elif [ -d "$dir_name" ]; then
        echo "Directory already exists"
    else
        mkdir -p "$dir_name"
        cd "$dir_name" || exit
    fi
}
export mkcd
